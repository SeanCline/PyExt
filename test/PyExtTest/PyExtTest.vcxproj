<?xml version="1.0" encoding="utf-8"?>
<Project DefaultTargets="Build" ToolsVersion="15.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <ItemGroup Label="ProjectConfigurations">
    <ProjectConfiguration Include="Debug|Win32">
      <Configuration>Debug</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|Win32">
      <Configuration>Release</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Debug|x64">
      <Configuration>Debug</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|x64">
      <Configuration>Release</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
  </ItemGroup>
  <PropertyGroup Label="Globals">
    <VCProjectVersion>15.0</VCProjectVersion>
    <ProjectGuid>{AE750E22-5A8E-401E-A843-B9D56B09A015}</ProjectGuid>
    <RootNamespace>PyExtTest</RootNamespace>
    <WindowsTargetPlatformVersion>10.0</WindowsTargetPlatformVersion>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.Default.props" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'" Label="Configuration">
    <ConfigurationType>Application</ConfigurationType>
    <UseDebugLibraries>true</UseDebugLibraries>
    <PlatformToolset>v142</PlatformToolset>
    <CharacterSet>
    </CharacterSet>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'" Label="Configuration">
    <ConfigurationType>Application</ConfigurationType>
    <UseDebugLibraries>false</UseDebugLibraries>
    <PlatformToolset>v142</PlatformToolset>
    <WholeProgramOptimization>true</WholeProgramOptimization>
    <CharacterSet>
    </CharacterSet>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'" Label="Configuration">
    <ConfigurationType>Application</ConfigurationType>
    <UseDebugLibraries>true</UseDebugLibraries>
    <PlatformToolset>v142</PlatformToolset>
    <CharacterSet>
    </CharacterSet>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'" Label="Configuration">
    <ConfigurationType>Application</ConfigurationType>
    <UseDebugLibraries>false</UseDebugLibraries>
    <PlatformToolset>v142</PlatformToolset>
    <WholeProgramOptimization>true</WholeProgramOptimization>
    <CharacterSet>
    </CharacterSet>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.props" />
  <ImportGroup Label="ExtensionSettings">
  </ImportGroup>
  <ImportGroup Label="Shared">
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <PropertyGroup Label="UserMacros" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
    <OutDir>$(SolutionDir)$(Platform)\$(Configuration)\</OutDir>
    <IntDir>$(Platform)\$(Configuration)\</IntDir>
    <IncludePath>$(SolutionDir)\include;$(WindowsSdkDir)\Debuggers\inc;$(IncludePath)</IncludePath>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
    <OutDir>$(SolutionDir)$(Platform)\$(Configuration)\</OutDir>
    <IntDir>$(Platform)\$(Configuration)\</IntDir>
    <IncludePath>$(SolutionDir)\include;$(WindowsSdkDir)\Debuggers\inc;$(IncludePath)</IncludePath>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <IncludePath>$(SolutionDir)\include;$(WindowsSdkDir)\Debuggers\inc;$(IncludePath)</IncludePath>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <IncludePath>$(SolutionDir)\include;$(WindowsSdkDir)\Debuggers\inc;$(IncludePath)</IncludePath>
  </PropertyGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <ClCompile>
      <WarningLevel>Level4</WarningLevel>
      <Optimization>Disabled</Optimization>
      <SDLCheck>true</SDLCheck>
      <DiagnosticsFormat>Caret</DiagnosticsFormat>
      <LanguageStandard>stdcpp17</LanguageStandard>
      <PreprocessorDefinitions>NOMINMAX</PreprocessorDefinitions>
    </ClCompile>
    <Link>
      <AdditionalDependencies>$(TargetDir)\pyext.lib;dbgeng.lib;%(AdditionalDependencies)</AdditionalDependencies>
      <SubSystem>Console</SubSystem>
    </Link>
    <PostBuildEvent>
      <Command>echo Copying Windows SDK debugger DLLs to target directory...
cd $(TargetDir)
IF NOT EXIST dbgeng.dll copy "$(FrameworkSdkDir)Debuggers\$(PlatformTarget)\dbgeng.dll" .\
IF NOT EXIST dbgcore.dll copy "$(FrameworkSdkDir)Debuggers\$(PlatformTarget)\dbgcore.dll" .\
IF NOT EXIST dbghelp.dll copy "$(FrameworkSdkDir)Debuggers\$(PlatformTarget)\dbghelp.dll" .\
IF NOT EXIST DbgModel.dll copy "$(FrameworkSdkDir)Debuggers\$(PlatformTarget)\DbgModel.dll" .\
IF NOT EXIST symsrv.dll copy "$(FrameworkSdkDir)Debuggers\$(PlatformTarget)\symsrv.dll" .\
</Command>
      <Message>Copying dbghelp and symsrv from the Debugging Tools for Windows package since the one that ships in system32 can't download symbols from a remote server...</Message>
    </PostBuildEvent>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
    <ClCompile>
      <WarningLevel>Level4</WarningLevel>
      <Optimization>Disabled</Optimization>
      <SDLCheck>true</SDLCheck>
      <DiagnosticsFormat>Caret</DiagnosticsFormat>
      <LanguageStandard>stdcpplatest</LanguageStandard>
      <PreprocessorDefinitions>NOMINMAX</PreprocessorDefinitions>
    </ClCompile>
    <Link>
      <AdditionalDependencies>$(TargetDir)\pyext.lib;dbgeng.lib;%(AdditionalDependencies)</AdditionalDependencies>
      <SubSystem>Console</SubSystem>
    </Link>
    <PostBuildEvent>
      <Command>echo Copying Windows SDK debugger DLLs to target directory...
cd $(TargetDir)
IF NOT EXIST dbgeng.dll copy "$(FrameworkSdkDir)Debuggers\$(PlatformTarget)\dbgeng.dll" .\
IF NOT EXIST dbgcore.dll copy "$(FrameworkSdkDir)Debuggers\$(PlatformTarget)\dbgcore.dll" .\
IF NOT EXIST dbghelp.dll copy "$(FrameworkSdkDir)Debuggers\$(PlatformTarget)\dbghelp.dll" .\
IF NOT EXIST DbgModel.dll copy "$(FrameworkSdkDir)Debuggers\$(PlatformTarget)\DbgModel.dll" .\
IF NOT EXIST symsrv.dll copy "$(FrameworkSdkDir)Debuggers\$(PlatformTarget)\symsrv.dll" .\
</Command>
      <Message>Copying dbghelp and symsrv from the Debugging Tools for Windows package since the one that ships in system32 can't download symbols from a remote server...</Message>
    </PostBuildEvent>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
    <ClCompile>
      <WarningLevel>Level4</WarningLevel>
      <Optimization>MaxSpeed</Optimization>
      <FunctionLevelLinking>true</FunctionLevelLinking>
      <IntrinsicFunctions>true</IntrinsicFunctions>
      <SDLCheck>true</SDLCheck>
      <DiagnosticsFormat>Caret</DiagnosticsFormat>
      <LanguageStandard>stdcpplatest</LanguageStandard>
      <PreprocessorDefinitions>NOMINMAX</PreprocessorDefinitions>
    </ClCompile>
    <Link>
      <EnableCOMDATFolding>true</EnableCOMDATFolding>
      <OptimizeReferences>true</OptimizeReferences>
      <AdditionalDependencies>$(TargetDir)\pyext.lib;dbgeng.lib;%(AdditionalDependencies)</AdditionalDependencies>
      <SubSystem>Console</SubSystem>
    </Link>
    <PostBuildEvent>
      <Command>echo Copying Windows SDK debugger DLLs to target directory...
cd $(TargetDir)
IF NOT EXIST dbgeng.dll copy "$(FrameworkSdkDir)Debuggers\$(PlatformTarget)\dbgeng.dll" .\
IF NOT EXIST dbgcore.dll copy "$(FrameworkSdkDir)Debuggers\$(PlatformTarget)\dbgcore.dll" .\
IF NOT EXIST dbghelp.dll copy "$(FrameworkSdkDir)Debuggers\$(PlatformTarget)\dbghelp.dll" .\
IF NOT EXIST DbgModel.dll copy "$(FrameworkSdkDir)Debuggers\$(PlatformTarget)\DbgModel.dll" .\
IF NOT EXIST symsrv.dll copy "$(FrameworkSdkDir)Debuggers\$(PlatformTarget)\symsrv.dll" .\
</Command>
      <Message>Copying dbghelp and symsrv from the Debugging Tools for Windows package since the one that ships in system32 can't download symbols from a remote server...</Message>
    </PostBuildEvent>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <ClCompile>
      <WarningLevel>Level4</WarningLevel>
      <Optimization>MaxSpeed</Optimization>
      <FunctionLevelLinking>true</FunctionLevelLinking>
      <IntrinsicFunctions>true</IntrinsicFunctions>
      <SDLCheck>true</SDLCheck>
      <DiagnosticsFormat>Caret</DiagnosticsFormat>
      <LanguageStandard>stdcpplatest</LanguageStandard>
      <PreprocessorDefinitions>NOMINMAX</PreprocessorDefinitions>
    </ClCompile>
    <Link>
      <EnableCOMDATFolding>true</EnableCOMDATFolding>
      <OptimizeReferences>true</OptimizeReferences>
      <AdditionalDependencies>$(TargetDir)\pyext.lib;dbgeng.lib;%(AdditionalDependencies)</AdditionalDependencies>
      <SubSystem>Console</SubSystem>
    </Link>
    <PostBuildEvent>
      <Command>echo Copying Windows SDK debugger DLLs to target directory...
cd $(TargetDir)
IF NOT EXIST dbgeng.dll copy "$(FrameworkSdkDir)Debuggers\$(PlatformTarget)\dbgeng.dll" .\
IF NOT EXIST dbgcore.dll copy "$(FrameworkSdkDir)Debuggers\$(PlatformTarget)\dbgcore.dll" .\
IF NOT EXIST dbghelp.dll copy "$(FrameworkSdkDir)Debuggers\$(PlatformTarget)\dbghelp.dll" .\
IF NOT EXIST DbgModel.dll copy "$(FrameworkSdkDir)Debuggers\$(PlatformTarget)\DbgModel.dll" .\
IF NOT EXIST symsrv.dll copy "$(FrameworkSdkDir)Debuggers\$(PlatformTarget)\symsrv.dll" .\
</Command>
      <Message>Copying dbghelp and symsrv from the Debugging Tools for Windows package since the one that ships in system32 can't download symbols from a remote server...</Message>
    </PostBuildEvent>
  </ItemDefinitionGroup>
  <ItemGroup>
    <ClCompile Include="FibonacciTest.cpp" />
    <ClCompile Include="LocalsplusTest.cpp" />
    <ClCompile Include="main.cpp" />
    <ClCompile Include="ObjectDetailsTest.cpp" />
    <ClCompile Include="ObjectTypesTest.cpp" />
    <ClCompile Include="PythonDumpFile.cpp" />
    <ClCompile Include="ScopeExitTest.cpp" />
    <ClCompile Include="TestConfigData.cpp" />
  </ItemGroup>
  <ItemGroup>
    <ProjectReference Include="..\..\src\PyExt.vcxproj">
      <Project>{eebc73ba-27f2-4483-8639-54a108b77594}</Project>
      <UseLibraryDependencyInputs>false</UseLibraryDependencyInputs>
    </ProjectReference>
  </ItemGroup>
  <ItemGroup>
    <ClInclude Include="PythonDumpFile.h" />
    <ClInclude Include="TestConfigData.h" />
  </ItemGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.targets" />
  <ImportGroup Label="ExtensionTargets">
  </ImportGroup>
</Project>